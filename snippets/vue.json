{
	// Place your snippets for vue here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Print import from": {
		"prefix": "im fr ",
		"body": [
			"import ${2} from '.${1}'${3}"
			// "import ${2:${1/(.*)$/${1:/capitalize}/i}} from './${1}'",
		],
		"description": "Log output to import  from '.'"
	},
	"Print new Date()": {
		"prefix": "n d ",
		"body": [
			"const ${1:date} = new Date()${2}",
		],
		"description": "Log output const date = new Date()"
	},
	"Print export default": {
		"prefix": "ex de ",
		"body": [
			"export default ${1}"
		],
		"description": "Log output export default "
	},
	"Print export default json": {
		"prefix": "ex de json",
		"body": [
			"export default {",
			"\t${1}",
			"}",
			""
		],
		"description": "Log output const date = new Date()"
	},
	"Print export default new": {
		"prefix": "ex de new",
		"body": [
			"export default new ${1:Object}(${2})${3}"
		],
		"description": "Log output export default new Object()"
	},
	"Print export const": {
		"prefix": "ex con",
		"body": [
			"export const ${1:NAME} = \"${2:NAME}\""
		],
		"description": "Log output export const NAME = NAME"
	},
	"Print export const object": {
		"prefix": "ex con obj",
		"body": [
			"export const ${1:NAME} = {",
			"\t${2}",	
			"}"
		],
		"description": "Log output export const NAME = {}"
	},
	"Print function": {
		"prefix": "fu ()",
		"body": [
			"function () {",
      "\t${1}",
			"}"
		],
		"description": "Log output function () {}"
	},
	"Print this argument": {
		"prefix": "this same argument",
		"body": [
			"this.${1} = ${1}${2}"
		],
		"description": "Log output this.X = X"
	},
	"Print builder method": {
		"prefix": "builder_method",
		"body": [
			"${1:name} () {",
			"\t${2}",
			"\treturn this",
			"}"
		],
		"description": "Log name () {return this}"
	},
}